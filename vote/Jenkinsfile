pipeline {
    agent{
        docker{
            image 'eeganlf/voteapp-python:v0.1.0'
        }
    }
    stages{
        stage('build'){
            steps{
                echo 'Installing dependecies'
                dir('vote'){
                    sh 'python -m pip install .'
            }
        }
    }
    stage('test'){
        steps{
            echo 'running unit tests on worker app'
            dir('vote'){
                sh 'python -m unittest'
            }
        }
    }
    stage('package'){
        steps{
            echo 'packaging worker app into a egg'
            dir('vote'){
                sh 'python setup.py sdist bdist_wheel'
                archiveArtifacts artifacts: '**/vote/*.whl', fingerprint: true
                }
            }
        }
    }
    stage('docker-package'){
        agent any
        when {
            changeset "**/vote/**"
            branch "master"
        }
        steps{
            echo 'Packaging worker app with docker'
            script{
                docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                    def workerImage = docker.build("ninocan/vote-python-frontend:v${env.BUILD_ID}", "./vote")
                    workerImage.push()
                    workerImage.push("latest")
                }
            }
        }
    }
    post{
        always{
            echo 'the job is complete'
        }
    }
}
