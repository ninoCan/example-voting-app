pipeline {
    agent{
        docker{
            image 'node:8.16.0-alpine'
        }
    }
    stages{
        stage('build'){
            steps{
                echo 'Building result app'
                dir('result'){
                    sh 'npm clean install'
            }
        }
    }
    stage('test'){
        steps{
            echo 'Executing tests'
            dir('result'){
                sh 'npm test'
            }
        }
    }
    stage('package'){
        steps{
            echo 'packaging result app'
            dir('result'){
                sh 'npm pack'
                archiveArtifacts artifacts: '**/*.tar', fingerprint: true
                }
            }
        }
    }
    stage('docker-package'){
        agent any
        when {
            changeset "**/result/**"
            branch "master"
        }
        steps{
            echo 'Packaging result app with docker'
            script{
                docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                    def workerImage = docker.build("ninocan/result:v${env.BUILD_ID}", "./result")
                    workerImage.push()
                    workerImage.push("latest")
                }
            }
        }
    }
    post{
        always{
            echo 'the job is complete'
        }
    }
}
